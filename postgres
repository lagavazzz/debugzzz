
EXPLAIN (ANALYZE, COSTS, VERBOSE, BUFFERS, FORMAT JSON) <insert-query>

https://explain.dalibo.com

Check tuples:

SELECT schemaname, relname, n_live_tup, n_dead_tup, last_autovacuum
FROM pg_stat_all_tables
WHERE n_dead_tup > 0
ORDER BY n_dead_tup DESC;
postgres=# SELECT h.table_name, c.interval_length
  FROM _timescaledb_catalog.dimension c
  JOIN _timescaledb_catalog.hypertable h
    ON h.id = c.hypertable_id;
postgres=# SELECT relname, last_vacuum, last_autovacuum FROM pg_stat_user_tables;
postgres=# SELECT
    schemaname
    ,relname
    ,n_live_tup
    ,n_dead_tup
    ,last_autovacuum
FROM pg_stat_all_tables
ORDER BY n_dead_tup
    /(n_live_tup
      * current_setting('autovacuum_vacuum_scale_factor')::float8
      + current_setting('autovacuum_vacuum_threshold')::float8)
     DESC;

Long queries:
SELECT
pid,
now() - pg_stat_activity.query_start AS duration,
query,
state
FROM pg_stat_activity
WHERE (now() - pg_stat_activity.query_start) > interval '1 minutes';

Size:
SELECT 
schemaname||'.'||tablename AS full_tname, 
pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) AS total_usage, 
pg_size_pretty((pg_total_relation_size(schemaname||'.'||tablename) - pg_relation_size(schemaname||'.'||tablename))) AS external_table_usage 
FROM pg_catalog.pg_tables 
ORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;

TSDB intervals:
SELECT h.table_name, c.interval_length
  FROM _timescaledb_catalog.dimension c
  JOIN _timescaledb_catalog.hypertable h
    ON h.id = c.hypertable_id;
